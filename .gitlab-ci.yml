image: docker:24.0.5

stages:
  - build
  - deploy

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  REGISTRY: $CI_REGISTRY_IMAGE

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin

# === BUILD STRAPI (SERVICE) ===
build_service:
  stage: build
  script:
    - docker build -t $REGISTRY/shabiqghazi_service:$IMAGE_TAG ./shabiqghazi-id_service
    - docker push $REGISTRY/shabiqghazi_service:$IMAGE_TAG
  only:
    - main

# === BUILD NUXT.JS FRONTEND ===
build_frontend:
  stage: build
  script:
    - docker build -t $REGISTRY/shabiqghazi_id:$IMAGE_TAG ./shabiqghazi-id
    - docker push $REGISTRY/shabiqghazi_id:$IMAGE_TAG
  only:
    - main

# === DEPLOY TO VPS ===
deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

    # 1️⃣ Siapkan SSH private key
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa

    # 2️⃣ Tambahkan known_hosts supaya SSH tidak interaktif
    - apk add --no-cache openssh
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
  script:
    # 3️⃣ Jalankan perintah di VPS (misal pull dan restart container)
    - ssh -i ~/.ssh/id_rsa "$SSH_USER@$SSH_HOST" "
      cd /root/shabiqghazi_website &&
      git pull origin main &&
      docker compose down &&
      docker compose pull &&
      docker compose up -d
      "

  only:
    - main
