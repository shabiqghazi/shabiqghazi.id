stages:
  - build
  - deploy

variables:
  FRONTEND_DIR: /root/shabiqghazi_website/shabiqghazi-id # ← Ganti dengan path kamu
  BACKEND_DIR: /root/shabiqghazi_website/shabiqghazi-id_service # ← Ganti dengan path kamu

# ====== BUILD FRONTEND ======
build:frontend:
  stage: build
  image: node:20-alpine
  cache:
    key: frontend-${CI_COMMIT_REF_SLUG}
    paths:
      - shabiqghazi-id/node_modules/
  script:
    - cd shabiqghazi-id
    - npm ci
    - npm run build
  artifacts:
    paths:
      - shabiqghazi-id/.output/
      - shabiqghazi-id/package.json
      - shabiqghazi-id/package-lock.json
      - shabiqghazi-id/ecosystem.config.js
    expire_in: 1 hour
  only:
    - main
    - master

# ====== BUILD BACKEND ======
build:backend:
  stage: build
  image: node:20-alpine
  cache:
    key: backend-${CI_COMMIT_REF_SLUG}
    paths:
      - shabiqghazi-id_service/node_modules/
  script:
    - cd shabiqghazi-id_service
    - npm ci
    - npm run build
  artifacts:
    paths:
      - shabiqghazi-id_service/build/
      - shabiqghazi-id_service/dist/
      - shabiqghazi-id_service/public/
      - shabiqghazi-id_service/package.json
      - shabiqghazi-id_service/package-lock.json
      - shabiqghazi-id_service/ecosystem.config.js
    expire_in: 1 hour
  only:
    - main
    - master

# ====== DEPLOY FRONTEND ======
deploy:frontend:
  stage: deploy
  image: debian:bookworm-slim
  dependencies:
    - build:frontend
  before_script:
    - apt-get update -y
    - apt-get install -y openssh-client rsync bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_B64" | base64 -d | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
  script:
    - cd shabiqghazi-id
    - rsync -avz --delete .output/ "$SSH_USER@$SSH_HOST:$FRONTEND_DIR/.output/"
    - rsync -avz package*.json ecosystem.config.js "$SSH_USER@$SSH_HOST:$FRONTEND_DIR/"
    - |
      ssh "$SSH_USER@$SSH_HOST" bash << 'EOF'
        set -e
        cd /root/shabiqghazi_website/shabiqghazi-id
        npm ci --omit=dev
        pm2 reload shabiqghazi-id --update-env || pm2 start ecosystem.config.js
        pm2 save
      EOF
  only:
    - main
    - master
  environment:
    name: production-frontend
    url: https://shabiqghazi.id

# ====== DEPLOY BACKEND ======
deploy:backend:
  stage: deploy
  image: debian:bookworm-slim
  dependencies:
    - build:backend
  before_script:
    # Install tools di environment GitLab runner
    - apt-get update -y
    - apt-get install -y openssh-client rsync

    # Setup SSH untuk koneksi ke VPS kamu
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY_B64" | base64 -d | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
  script:
    - cd shabiqghazi-id_service

    # Upload semua file hasil build ke VPS (termasuk uploads)
    - rsync -avz --delete \
      build/ dist/ public/ \
      package*.json ecosystem.config.js \
      $SSH_USER@$SSH_HOST:$BACKEND_DIR/

    # Jalankan proses restart backend di VPS
    - |
      ssh $SSH_USER@$SSH_HOST << 'EOF'
        cd $BACKEND_DIR
        npm ci --omit=dev
        pm2 reload shabiqghazi-service --update-env || pm2 start ecosystem.config.js
        pm2 save
      EOF
  only:
    - main
    - master
  environment:
    name: production-backend
    url: https://api.shabiqghazi.id
